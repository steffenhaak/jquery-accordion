/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var JQueryModuleBase = (function () {
    function JQueryModuleBase() {
    }
    return JQueryModuleBase;
}());
exports.JQueryModuleBase = JQueryModuleBase;
var JQueryPluginBase = (function (_super) {
    __extends(JQueryPluginBase, _super);
    function JQueryPluginBase(name, element, defaults, options) {
        var _this = _super.call(this) || this;
        _this.element = element;
        _this.$element = $(element);
        _this._$clone = _this.$element.clone(true);
        _this.options = $.extend({}, defaults, options);
        _this.$element.on('init.' + name, function () {
            _this.init();
        });
        _this.$element.on('destroy.' + name, function () {
            _this.destroy();
        });
        return _this;
    }
    JQueryPluginBase.prototype.destroy = function () {
        this.$element.replaceWith(this._$clone);
    };
    ;
    return JQueryPluginBase;
}(JQueryModuleBase));
exports.JQueryPluginBase = JQueryPluginBase;


/***/ }),
/* 1 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var JQueryPluginEvents = (function () {
    function JQueryPluginEvents() {
    }
    JQueryPluginEvents.wrapEvents = function ($element, eventName, fn, params) {
        if (params === void 0) { params = []; }
        var event = $.Event('before.' + eventName);
        var result;
        if (!$.isFunction(fn)) {
            throw 'Invalid function provided to wrapEvents';
        }
        $element.trigger(event, params);
        if (!event.isDefaultPrevented()) {
            result = fn();
            $element.trigger('after.' + eventName, params);
        }
        return result;
    };
    return JQueryPluginEvents;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = JQueryPluginEvents;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var jquery_base_1 = __webpack_require__(0);
var Demo = (function (_super) {
    __extends(Demo, _super);
    function Demo($element, options) {
        var _this = _super.call(this) || this;
        _this.$element = $element;
        _this.options = options;
        return _this;
    }
    Demo.prototype.init = function () {
        var _this = this;
        this.$element.find('.accordion__titleLink').on('click.accordionAnimation', function (e) {
            console.log('click');
            e.preventDefault();
            _this.togglePanel($(e.currentTarget));
        });
    };
    Demo.prototype.togglePanel = function ($titleLink) {
        var $panel = $titleLink.closest('accordion__panel');
        var $content = $panel.find('accordion__content');
        if ($panel.hasClass('accordion__panel--open')) {
            $content.slideUp(this.options.closeDuration, function () {
                $panel.removeClass('accordion__panel--open');
            });
        }
        else {
            $content.slideDown(this.options.openDuration, function () {
                $panel.addClass('accordion__panel--open');
            });
        }
    };
    Demo.prototype.destroy = function () {
        this.$element.find('.accordion__titleLink').off('click.accordionAnimation');
    };
    Demo.prototype.test = function ($element) {
        $element
            .html('TypeScript Plugin loaded')
            .css('backgroundColor', 'lightcoral')
            .on('click', function () {
            console.log('clicked element');
            $element.css('backgroundColor', 'green');
        });
    };
    Demo.prototype.add = function (x, y) {
        return x + y;
    };
    return Demo;
}(jquery_base_1.JQueryModuleBase));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Demo;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var jquery_base_1 = __webpack_require__(0);
var jquery_events_1 = __webpack_require__(2);
var Animation_1 = __webpack_require__(3);
__webpack_require__(1);
(function ($, window, document) {
    var Plugin = (function (_super) {
        __extends(Plugin, _super);
        function Plugin(element, options) {
            return _super.call(this, Plugin.NAME, element, Plugin.DEFAULTS, options) || this;
        }
        Plugin.prototype.init = function () {
            jquery_events_1.default.wrapEvents(this.$element, 'init.accordion', $.proxy(this.initAccordion, this));
        };
        Plugin.prototype.initAccordion = function (test) {
            if (test === void 0) { test = true; }
            this.animation = new Animation_1.default(this.$element, this.options.animation);
            this.animation.init();
        };
        Plugin.prototype.destroy = function () {
            _super.prototype.destroy.call(this);
        };
        return Plugin;
    }(jquery_base_1.JQueryPluginBase));
    Plugin.NAME = 'accordion';
    Plugin.DEFAULTS = {
        animation: {
            autoClose: true,
            openDuration: 300,
            closeDuration: 300
        },
        scrolling: {
            active: true,
            duration: 500,
            topOffset: function () { return 0; }
        },
        url: {
            active: true,
            encodeHash: false
        }
    };
    $.fn[Plugin.NAME] = function (options) {
        return this.each(function () {
            var $this = $(this);
            if (!$this.data(Plugin.NAME)) {
                $this.data(Plugin.NAME, new Plugin(this, options));
            }
        });
    };
})(jQuery, window, document);


/***/ })
/******/ ]);
//# sourceMappingURL=accordion.min.js.map